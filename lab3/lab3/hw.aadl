package lab3::hw
public
	with lab3::types;
	
	bus AocsBus
	end AocsBus;
	
	bus TmTcBus
	end TmTcBus;
	
	-- -------------------------- DEVICES --------------------------------------
	
	-- -----------------DEVICES: SENSORS ----------------------
	device FineSunSensor
		features
			fss_rot_x: out data port lab3::types::radians;
			fss_rot_y: out data port lab3::types::radians;
			fss_rot_z: out data port lab3::types::radians;
			fss_activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			fx: flow source fss_rot_x {latency => 1ms..2ms;};
			fy: flow source fss_rot_y {latency => 1ms..2ms;};
			fz: flow source fss_rot_z {latency => 1ms..2ms;};
	end FineSunSensor;
		
	device CoarseSunSensor
		features
			css_rot_x: out data port lab3::types::radians;
			css_rot_y: out data port lab3::types::radians;
			css_rot_z: out data port lab3::types::radians;
			css_activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			fx: flow source css_rot_x {latency => 1ms..2ms;};
			fy: flow source css_rot_y {latency => 1ms..2ms;};
			fz: flow source css_rot_z {latency => 1ms..2ms;};
	end CoarseSunSensor;
	
	device SunPresenceSensor
		features
			is_present: out data port lab3::types::sunExist;
			sps_activate: in data port lab3::types::deviceActivate;
			
			
			comm: requires bus access AocsBus;
			
		flows
			fi: flow source is_present {latency => 1ms..2ms;};
	end SunPresenceSensor;
		
	device EarthSensor
		features
			es_rot_x: out data port lab3::types::radians;
			es_rot_y: out data port lab3::types::radians;
			es_rot_z: out data port lab3::types::radians;
			es_activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			fx: flow source es_rot_x {latency => 1ms..2ms;};
			fy: flow source es_rot_y {latency => 1ms..2ms;};
			fz: flow source es_rot_z {latency => 1ms..2ms;};
	end EarthSensor;
	
	device magnetometer
		features
			mag_x: out data port lab3::types::magneto;
			mag_y: out data port lab3::types::magneto;
			mag_z: out data port lab3::types::magneto;
			mag_activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			fx: flow source mag_x {latency => 1ms..2ms;};
			fy: flow source mag_y {latency => 1ms..2ms;};
			fz: flow source mag_z {latency => 1ms..2ms;};
	end magnetometer;
		
	device Gyroscope
		features
			rate_x: out data port lab3::types::angularRate;
			rate_y: out data port lab3::types::angularRate;
			rate_z: out data port lab3::types::angularRate;
			rate_activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			fx: flow source rate_x {latency => 1ms..2ms;};
			fy: flow source rate_y {latency => 1ms..2ms;};
			fz: flow source rate_z {latency => 1ms..2ms;};
	end Gyroscope;
		
	device GPS
		features
			long: out data port lab3::types::position;
			lat: out data port lab3::types::position;
			el: out data port lab3::types::position;
			time: out data port lab3::types::gpsTimeStamp;
			gps_activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			fx: flow source long {latency => 1ms..2ms;};
			fy: flow source lat {latency => 1ms..2ms;};
			fz: flow source el {latency => 1ms..2ms;};
			fw: flow source time {latency => 1ms..2ms;};
	end GPS;
		
	device StarTracker
		features
			st_rot_x: out data port lab3::types::radians;
			st_rot_y: out data port lab3::types::radians;
			st_rot_z: out data port lab3::types::radians;
			st_activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			fx: flow source st_rot_x {latency => 1ms..2ms;};
			fy: flow source st_rot_y {latency => 1ms..2ms;};
			fz: flow source st_rot_z {latency => 1ms..2ms;};
	end StarTracker;
		
		
	-- --------------- DEVICES: ACTUATORS ------------------	
	device RxWheel
		features
			tor_x: in data port lab3::types::torque;
			tor_y: in data port lab3::types::torque;
			tor_z: in data port lab3::types::torque;
			
			comm: requires bus access AocsBus;

		flows
			fx: flow sink tor_x {latency => 1ms .. 2ms;};
			fy: flow sink tor_y {latency => 1ms .. 2ms;};
			fz: flow sink tor_z {latency => 1ms .. 2ms;};				
	end RxWheel;
	device Thruster
		features
			dV_x: in data port lab3::types::deltaV;
			dV_y: in data port lab3::types::deltaV;
			dV_z: in data port lab3::types::deltaV;
			
			comm: requires bus access AocsBus;

		flows
			fx: flow sink dV_x {latency => 1ms .. 2ms;};
			fy: flow sink dV_y {latency => 1ms .. 2ms;};
			fz: flow sink dV_z {latency => 1ms .. 2ms;};				
	end Thruster;
	
	
	
	-- ---------------- DEVICES: COMPUTERS AND TELEMETRY -------------- 
	
	-- the main AOCS computer .... probably this will have to be repeated for redundency
	device AocsCpu
		features
			-- inputs from devices to computer
			fss_rot_x_in: in data port lab3::types::radians;
			fss_rot_y_in: in data port lab3::types::radians;
			fss_rot_z_in: in data port lab3::types::radians;
			css_rot_x_in: in data port lab3::types::radians;
			css_rot_y_in: in data port lab3::types::radians;
			css_rot_z_in: in data port lab3::types::radians;
			sps_present_in: in data port lab3::types::sunExist;
			es_rot_x_in: in data port lab3::types::radians;
			es_rot_y_in: in data port lab3::types::radians;
			es_rot_z_in: in data port lab3::types::radians;
			mag_x_in: in data port lab3::types::magneto;
			mag_y_in: in data port lab3::types::magneto;
			mag_z_in: in data port lab3::types::magneto;
			rate_x_in: in data port lab3::types::angularRate;
			rate_y_in: in data port lab3::types::angularRate;
			rate_z_in: in data port lab3::types::angularRate;
			gps_long_in: in data port lab3::types::position;
			gps_lat_in: in data port lab3::types::position;
			gps_el_in: in data port lab3::types::position;
			gps_time_in: in data port lab3::types::gpsTimeStamp;
			st_rot_x_in: in data port lab3::types::radians;
			st_rot_y_in: in data port lab3::types::radians;
			st_rot_z_in: in data port lab3::types::radians;
			
			
			-- stuff received from/ sent to the main onboard computer
			telecommand_in: in data port lab3::types::telecommandString; -- this signal is received from the OBC (on board computer)
			telecommand_out: out data port lab3::types::telecommandString; -- will be sent to processes that need it
			telemetry_in: in data port lab3::types::telemetryString;
			telemetry_out: out data port lab3::types::telemetryString;
			activate_in: in data port lab3::types::aocsActivate;
			activate_out: out data port lab3::types::aocsActivate;
			
			-- stuff related to the watchdog
			to_watchdog_in: in data port lab3::types::watchdogString;
			to_watchdog_out: out data port lab3::types::watchdogString;
			
			-- activation values coming from the reconfiguration thread
			fss_activate_in: in data port lab3::types::deviceActivate;
			css_activate_in: in data port lab3::types::deviceActivate;
			sps_activate_in: in data port lab3::types::deviceActivate;
			es_activate_in: in data port lab3::types::deviceActivate;
			mag_activate_in: in data port lab3::types::deviceActivate;
			rate_activate_in: in data port lab3::types::deviceActivate;
			st_activate_in: in data port lab3::types::deviceActivate;
			gps_activate_in: in data port lab3::types::deviceActivate;
			
			
			-- actuation values received from actuation processes 
			tor_x_in: in data port lab3::types::torque;
			tor_y_in: in data port lab3::types::torque;
			tor_z_in: in data port lab3::types::torque;
			dV_x_in: in data port lab3::types::deltaV;
			dV_y_in: in data port lab3::types::deltaV;
			dV_z_in: in data port lab3::types::deltaV;
			
			-- sensor values sent from computer to processes
			fss_rot_x_out: out data port lab3::types::radians;
			fss_rot_y_out: out data port lab3::types::radians;
			fss_rot_z_out: out data port lab3::types::radians;
			css_rot_x_out: out data port lab3::types::radians;
			css_rot_y_out: out data port lab3::types::radians;
			css_rot_z_out: out data port lab3::types::radians;
			sps_present_out: out data port lab3::types::sunExist;
			es_rot_x_out: out data port lab3::types::radians;
			es_rot_y_out: out data port lab3::types::radians;
			es_rot_z_out: out data port lab3::types::radians;
			mag_x_out: out data port lab3::types::magneto;
			mag_y_out: out data port lab3::types::magneto;
			mag_z_out: out data port lab3::types::magneto;
			rate_x_out: out data port lab3::types::angularRate;
			rate_y_out: out data port lab3::types::angularRate;
			rate_z_out: out data port lab3::types::angularRate;
			gps_long_out: out data port lab3::types::position;
			gps_lat_out: out data port lab3::types::position;
			gps_el_out: out data port lab3::types::position;
			gps_time_out: out data port lab3::types::gpsTimeStamp;
			st_rot_x_out: out data port lab3::types::radians;
			st_rot_y_out: out data port lab3::types::radians;
			st_rot_z_out: out data port lab3::types::radians;
			
			-- activation output signals going to devices
			fss_activate_out: out data port lab3::types::deviceActivate;
			css_activate_out: out data port lab3::types::deviceActivate;
			sps_activate_out: out data port lab3::types::deviceActivate;
			es_activate_out: out data port lab3::types::deviceActivate;
			mag_activate_out: out data port lab3::types::deviceActivate;
			rate_activate_out: out data port lab3::types::deviceActivate;
			st_activate_out: out data port lab3::types::deviceActivate;
			gps_activate_out: out data port lab3::types::deviceActivate;
			
			
			-- actuator output values going to actuators 
			tor_x_out: out data port lab3::types::torque;
			tor_y_out: out data port lab3::types::torque;
			tor_z_out: out data port lab3::types::torque;
			dV_x_out: out data port lab3::types::deltaV;
			dV_y_out: out data port lab3::types::deltaV;
			dV_z_out: out data port lab3::types::deltaV;
			
			aocs: requires bus access AocsBus;
			tmtc: requires bus access TmTcBus;
	end AocsCpu;
	
	-- defining the main onboard and data handling computer of the satellite
	device ObdhCpu
		features
			telecommand_in: in data port lab3::types::telecommandString;
			telecommand_out: out data port lab3::types::telecommandString;
			telemetry_in: in data port lab3::types::telemetryString;
			telemetry_out: out data port lab3::types::telemetryString;
			activation_out: out data port lab3::types::aocsActivate; --responsible for activating the main aocs unit
			
			tmtc: requires bus access TmTcBus;
	end ObdhCpu;
	
	
	-- defining the watchdog that is responsible for monitoring the AOCS
	device watchdog
		features
			-- to be received from AOCS computers
			watchdog_acos_main_in: in data port lab3::types::watchdogString;
			watchdog_acos_red_in: in data port lab3::types::watchdogString;
			
			-- to be sent to a thread
			watchdog_acos_main_out: out data port lab3::types::watchdogString;
			watchdog_acos_red_out: out data port lab3::types::watchdogString;
			
			watchdog_response_main_in: in data port lab3::types::aocsActivate;
			watchdog_response_red_in: in data port lab3::types::aocsActivate;
			watchdog_response_main_out: out data port lab3::types::aocsActivate;
			watchdog_response_red_out: out data port lab3::types::aocsActivate;
			
			aocs: requires bus access AocsBus;
	end watchdog;
	
	
	--------- DEVICE IMPLEMENTATIONS: SENSOR IMPLEMENTATION ---------------------

	device implementation FineSunSensor.impl
		properties
			Period => 100ms;
	end FineSunSensor.impl;
	device implementation CoarseSunSensor.impl
		properties
			Period => 100ms;
	end CoarseSunSensor.impl;
	device implementation SunPresenceSensor.impl
		properties
			Period => 1000ms;
	end SunPresenceSensor.impl;
	device implementation EarthSensor.impl
		properties
			Period => 1000ms;
	end EarthSensor.impl;
	device implementation magnetometer.impl
		properties
			Period => 10ms;
	end magnetometer.impl;
	device implementation Gyroscope.impl
		properties
			Period => 1ms;
	end Gyroscope.impl;
	device implementation GPS.impl
		properties
			Period => 1000ms;
	end GPS.impl;
	device implementation StarTracker.impl
		properties
			Period => 1000ms;
	end StarTracker.impl;
	
end lab3::hw;