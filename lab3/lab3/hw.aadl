package lab3::hw
public
	with lab3::types;
	
	bus AocsBus
	end AocsBus;
	
	bus AocsBus_r
	end AocsBus_r;
	
	bus TmTcBus
	end TmTcBus;
	
	-- -------------------------- DEVICES --------------------------------------
	
	-- -----------------DEVICES: SENSORS ----------------------
	device FineSunSensor
		features
			rot: out data port lab3::types::orientation;
			activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			frot: flow source rot {latency => 1ms..2ms;};
	end FineSunSensor;
		
	device CoarseSunSensor
		features
			rot: out data port lab3::types::orientation;
			activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			frot: flow source rot {latency => 1ms..2ms;};
	end CoarseSunSensor;
	
	device SunPresenceSensor
		features
			is_present: out data port lab3::types::sunExist;
			activate: in data port lab3::types::deviceActivate;
			
			
			comm: requires bus access AocsBus;
			
		flows
			fi: flow source is_present {latency => 1ms..2ms;};
	end SunPresenceSensor;
		
	device EarthSensor
		features
			rot: out data port lab3::types::orientation;
			activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			frot: flow source rot {latency => 1ms..2ms;};
	end EarthSensor;
	
	device magnetometer
		features
			rot: out data port lab3::types::orientation;
			activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			frot: flow source rot {latency => 1ms..2ms;};
	end magnetometer;
		
	device Gyroscope
		features
			rate: out data port lab3::types::angular_rate;
			activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			frate: flow source rate {latency => 1ms..2ms;};
	end Gyroscope;
		
	device GPS
		features
			pos: out data port lab3::types::position;
			time: out data port lab3::types::gpsTimeStamp;
			gps_activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			fpos: flow source pos {latency => 1ms..2ms;};
			ft: flow source time {latency => 1ms..2ms;};
	end GPS;
		
	device StarTracker
		features
			rot: out data port lab3::types::orientation;
			activate: in data port lab3::types::deviceActivate;
			
			comm: requires bus access AocsBus;
			
		flows
			frot: flow source rot {latency => 1ms..2ms;};
	end StarTracker;
		
		
	-- --------------- DEVICES: ACTUATORS ------------------	
	device RxWheel
		features
			tor: in data port lab3::types::torque;
			
			comm: requires bus access AocsBus;

		flows
			ftor: flow sink tor {latency => 1ms .. 2ms;};				
	end RxWheel;
	device Thruster
		features
			dV: in data port lab3::types::delta_v;
			
			comm: requires bus access AocsBus;

		flows
			fdV: flow sink dV {latency => 1ms .. 2ms;};				
	end Thruster;
	
	
	
	-- ---------------- DEVICES: COMPUTERS AND TELEMETRY -------------- 
	
	-- the main AOCS computer .... probably this will have to be repeated for redundency
	device AocsCpu
		features
			-- inputs from devices to computer
			fss_rot_in: in data port lab3::types::orientation;
			css_rot_in: in data port lab3::types::orientation;
			sps_present_in: in data port lab3::types::sunExist;
			es_rot_in: in data port lab3::types::orientation;
			mag_in: in data port lab3::types::orientation;
			rate_in: in data port lab3::types::angular_rate;
			gps_pos_in: in data port lab3::types::position;
			gps_time_in: in data port lab3::types::gpsTimeStamp;
			st_rot_in: in data port lab3::types::orientation;
			
			
			-- stuff received from/ sent to the main onboard computer
			telecommand_in: in data port lab3::types::telecommandString; -- this signal is received from the OBC (on board computer)
			telecommand_out: out data port lab3::types::telecommandString; -- will be sent to processes that need it
			telemetry_in: in data port lab3::types::telemetryString;
			telemetry_out: out data port lab3::types::telemetryString;
			activate_in: in data port lab3::types::aocsActivate;
			activate_out: out data port lab3::types::aocsActivate;
			
			-- stuff related to the watchdog
			to_watchdog_in: in data port lab3::types::watchdogString;
			to_watchdog_out: out data port lab3::types::watchdogString;
			from_watchdog_in: in data port lab3::types::watchdogResponse;
			from_watchdog_out: out data port lab3::types::watchdogResponse;
			
			-- activation values coming from the reconfiguration thread
			fss_activate_in: in data port lab3::types::deviceActivate;
			css_activate_in: in data port lab3::types::deviceActivate;
			sps_activate_in: in data port lab3::types::deviceActivate;
			es_activate_in: in data port lab3::types::deviceActivate;
			mag_activate_in: in data port lab3::types::deviceActivate;
			rate_activate_in: in data port lab3::types::deviceActivate;
			st_activate_in: in data port lab3::types::deviceActivate;
			gps_activate_in: in data port lab3::types::deviceActivate;
			
			
			-- actuation values received from actuation processes 
			tor_in: in data port lab3::types::torque;
			dV_in: in data port lab3::types::delta_v;
			
			-- sensor values sent from computer to processes
			fss_rot_out: out data port lab3::types::orientation;
			css_rot_out: out data port lab3::types::orientation;
			sps_present_out: out data port lab3::types::sunExist;
			es_rot_out: out data port lab3::types::orientation;
			mag_out: out data port lab3::types::orientation;
			rate_out: out data port lab3::types::angular_rate;
			gps_pos_out: out data port lab3::types::position;
			gps_time_out: out data port lab3::types::gpsTimeStamp;
			st_rot_out: out data port lab3::types::orientation;
			
			-- activation output signals going to devices
			fss_activate_out: out data port lab3::types::deviceActivate;
			css_activate_out: out data port lab3::types::deviceActivate;
			sps_activate_out: out data port lab3::types::deviceActivate;
			es_activate_out: out data port lab3::types::deviceActivate;
			mag_activate_out: out data port lab3::types::deviceActivate;
			rate_activate_out: out data port lab3::types::deviceActivate;
			st_activate_out: out data port lab3::types::deviceActivate;
			gps_activate_out: out data port lab3::types::deviceActivate;
			
			
			-- actuator output values going to actuators
			tor_out: out data port lab3::types::torque;
			dV_out: out data port lab3::types::delta_v;
			
			aocs: requires bus access AocsBus;
			tmtc: requires bus access TmTcBus;
	end AocsCpu;
	
	-- defining the main onboard and data handling computer of the satellite
	device ObdhCpu
		features
			telecommand_in: in data port lab3::types::telecommandString;
			telecommand_out: out data port lab3::types::telecommandString;
			telemetry_in: in data port lab3::types::telemetryString;
			telemetry_out: out data port lab3::types::telemetryString;
			activation_out: out data port lab3::types::aocsActivate; --responsible for activating the main aocs unit
			
			tmtc: requires bus access TmTcBus;
	end ObdhCpu;
	
	
	-- defining the watchdog that is responsible for monitoring the AOCS
	device watchdog
		features
			-- to be received from AOCS computers
			watchdog_acos_main_in: in data port lab3::types::watchdogString;
			watchdog_acos_red_in: in data port lab3::types::watchdogString;
			
			-- to be sent to a thread
			watchdog_acos_main_out: out data port lab3::types::watchdogString;
			watchdog_acos_red_out: out data port lab3::types::watchdogString;
			
			watchdog_response_main_in: in data port lab3::types::watchdogResponse;
			watchdog_response_red_in: in data port lab3::types::watchdogResponse;
			watchdog_response_main_out: out data port lab3::types::watchdogResponse;
			watchdog_response_red_out: out data port lab3::types::watchdogResponse;
			
			aocs: requires bus access AocsBus;
			aocs_r: requires bus access AocsBus_r;
	end watchdog;
	
	
	--------- DEVICE IMPLEMENTATIONS: SENSOR IMPLEMENTATION ---------------------

	device implementation FineSunSensor.impl
		properties
			Period => 100ms;
	end FineSunSensor.impl;
	device implementation CoarseSunSensor.impl
		properties
			Period => 100ms;
	end CoarseSunSensor.impl;
	device implementation SunPresenceSensor.impl
		properties
			Period => 1000ms;
	end SunPresenceSensor.impl;
	device implementation EarthSensor.impl
		properties
			Period => 1000ms;
	end EarthSensor.impl;
	device implementation magnetometer.impl
		properties
			Period => 10ms;
	end magnetometer.impl;
	device implementation Gyroscope.impl
		properties
			Period => 1ms;
	end Gyroscope.impl;
	device implementation GPS.impl
		properties
			Period => 1000ms;
	end GPS.impl;
	device implementation StarTracker.impl
		properties
			Period => 1000ms;
	end StarTracker.impl;
	
end lab3::hw;